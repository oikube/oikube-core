"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const plugin_1 = require("./plugin");
const chokidar_1 = require("chokidar");
function OikubePluginService({ createHook }) {
    console.log('CWD', process.cwd());
    function loadPlugin(path) {
        let plugClass = require(path);
        if (plugClass.default.prototype instanceof plugin_1.OikubePlugin) {
            createHook(OikubePluginService.PLUGIN_PREPARE, { pluginClass: plugClass.default });
            let item = new plugClass.default();
            item._register();
            createHook(OikubePluginService.PLUGIN_START, { plugin: item });
        }
    }
    let pluginDirWatcher = chokidar_1.watch([process.cwd() + '/build/libs/**/index.js', process.cwd() + '/build/libs/*.js']);
    pluginDirWatcher.on('add', path => {
        console.log('ADD FILE', path);
        loadPlugin(path);
    });
    pluginDirWatcher.on('addDir', path => {
        console.log('ADD DIR', path);
        loadPlugin(path);
    });
    pluginDirWatcher.on('addDir', path => {
        console.log('ADD DIR', path);
        loadPlugin(path);
    });
    createHook(OikubePluginService.PLUGINS_INIT);
}
exports.OikubePluginService = OikubePluginService;
OikubePluginService.PLUGINS_INIT = `plugins/init`;
OikubePluginService.PLUGIN_START = `plugins/start`;
OikubePluginService.PLUGIN_PREPARE = `plugins/prepare`;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wbHVnaW5zL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEscUNBQXdDO0FBQ3hDLHVDQUFpQztBQUVqQyw2QkFBb0MsRUFBRSxVQUFVLEVBQUU7SUFDakQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUM7SUFDbEMsb0JBQW9CLElBQVk7UUFDL0IsSUFBSSxTQUFTLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlCLElBQUksU0FBUyxDQUFDLE9BQU8sQ0FBQyxTQUFTLFlBQVkscUJBQVksRUFBRTtZQUN4RCxVQUFVLENBQUMsbUJBQW1CLENBQUMsY0FBYyxFQUFFLEVBQUUsV0FBVyxFQUFFLFNBQVMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO1lBQ25GLElBQUksSUFBSSxHQUFHLElBQUksU0FBUyxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ25DLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztZQUNqQixVQUFVLENBQUMsbUJBQW1CLENBQUMsWUFBWSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7U0FDL0Q7SUFDRixDQUFDO0lBQ0QsSUFBSSxnQkFBZ0IsR0FBRyxnQkFBSyxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxHQUFHLHlCQUF5QixFQUFFLE9BQU8sQ0FBQyxHQUFHLEVBQUUsR0FBRyxrQkFBa0IsQ0FBQyxDQUFDLENBQUM7SUFDOUcsZ0JBQWdCLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsRUFBRTtRQUNqQyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUM5QixVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbEIsQ0FBQyxDQUFDLENBQUM7SUFDSCxnQkFBZ0IsQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxFQUFFO1FBQ3BDLE9BQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQzdCLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsQixDQUFDLENBQUMsQ0FBQztJQUNILGdCQUFnQixDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLEVBQUU7UUFDcEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDN0IsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2xCLENBQUMsQ0FBQyxDQUFDO0lBQ0gsVUFBVSxDQUFDLG1CQUFtQixDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQzlDLENBQUM7QUF6QkQsa0RBeUJDO0FBQ0QsbUJBQW1CLENBQUMsWUFBWSxHQUFHLGNBQWMsQ0FBQztBQUNsRCxtQkFBbUIsQ0FBQyxZQUFZLEdBQUcsZUFBZSxDQUFDO0FBQ25ELG1CQUFtQixDQUFDLGNBQWMsR0FBRyxpQkFBaUIsQ0FBQyIsImZpbGUiOiJwbHVnaW5zL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT2lrdWJlUGx1Z2luIH0gZnJvbSAnLi9wbHVnaW4nO1xuaW1wb3J0IHsgd2F0Y2ggfSBmcm9tICdjaG9raWRhcic7XG5cbmV4cG9ydCBmdW5jdGlvbiBPaWt1YmVQbHVnaW5TZXJ2aWNlKHsgY3JlYXRlSG9vayB9KSB7XG5cdGNvbnNvbGUubG9nKCdDV0QnLCBwcm9jZXNzLmN3ZCgpKTtcblx0ZnVuY3Rpb24gbG9hZFBsdWdpbihwYXRoOiBzdHJpbmcpIHtcblx0XHRsZXQgcGx1Z0NsYXNzID0gcmVxdWlyZShwYXRoKTtcblx0XHRpZiAocGx1Z0NsYXNzLmRlZmF1bHQucHJvdG90eXBlIGluc3RhbmNlb2YgT2lrdWJlUGx1Z2luKSB7XG5cdFx0XHRjcmVhdGVIb29rKE9pa3ViZVBsdWdpblNlcnZpY2UuUExVR0lOX1BSRVBBUkUsIHsgcGx1Z2luQ2xhc3M6IHBsdWdDbGFzcy5kZWZhdWx0IH0pO1xuXHRcdFx0bGV0IGl0ZW0gPSBuZXcgcGx1Z0NsYXNzLmRlZmF1bHQoKTtcblx0XHRcdGl0ZW0uX3JlZ2lzdGVyKCk7XG5cdFx0XHRjcmVhdGVIb29rKE9pa3ViZVBsdWdpblNlcnZpY2UuUExVR0lOX1NUQVJULCB7IHBsdWdpbjogaXRlbSB9KTtcblx0XHR9XG5cdH1cblx0bGV0IHBsdWdpbkRpcldhdGNoZXIgPSB3YXRjaChbcHJvY2Vzcy5jd2QoKSArICcvYnVpbGQvbGlicy8qKi9pbmRleC5qcycsIHByb2Nlc3MuY3dkKCkgKyAnL2J1aWxkL2xpYnMvKi5qcyddKTtcblx0cGx1Z2luRGlyV2F0Y2hlci5vbignYWRkJywgcGF0aCA9PiB7XG5cdFx0Y29uc29sZS5sb2coJ0FERCBGSUxFJywgcGF0aCk7XG5cdFx0bG9hZFBsdWdpbihwYXRoKTtcblx0fSk7XG5cdHBsdWdpbkRpcldhdGNoZXIub24oJ2FkZERpcicsIHBhdGggPT4ge1xuXHRcdGNvbnNvbGUubG9nKCdBREQgRElSJywgcGF0aCk7XG5cdFx0bG9hZFBsdWdpbihwYXRoKTtcblx0fSk7XG5cdHBsdWdpbkRpcldhdGNoZXIub24oJ2FkZERpcicsIHBhdGggPT4ge1xuXHRcdGNvbnNvbGUubG9nKCdBREQgRElSJywgcGF0aCk7XG5cdFx0bG9hZFBsdWdpbihwYXRoKTtcblx0fSk7XG5cdGNyZWF0ZUhvb2soT2lrdWJlUGx1Z2luU2VydmljZS5QTFVHSU5TX0lOSVQpO1xufVxuT2lrdWJlUGx1Z2luU2VydmljZS5QTFVHSU5TX0lOSVQgPSBgcGx1Z2lucy9pbml0YDtcbk9pa3ViZVBsdWdpblNlcnZpY2UuUExVR0lOX1NUQVJUID0gYHBsdWdpbnMvc3RhcnRgO1xuT2lrdWJlUGx1Z2luU2VydmljZS5QTFVHSU5fUFJFUEFSRSA9IGBwbHVnaW5zL3ByZXBhcmVgO1xuIl19
